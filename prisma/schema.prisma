datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String     @id @default(uuid())  // UUID primary key
  email     String     @unique
  password  String
  role      UserRole   @default(MANAGER)
  companyId String     // UUID type for foreign key
  company   Company    @relation(fields: [companyId], references: [id])
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

enum UserRole {
  ADMIN
  MANAGER
}

model Company {
  id        String     @id @default(uuid())  // UUID primary key
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  users     User[]
  vehicules Vehicule[]
}

model Vehicule {
  id                String     @id @default(uuid())  // UUID primary key
  privateVehicule   Boolean    @default(false)
  plate             String?    @unique
  name              String
  brand             String?
  model             String?
  year              Int?
  pictureUrl        String?    // Optional picture URL
  lastChecked       DateTime
  lastStarted       DateTime
  lastMaintenance   DateTime
  km                Int
  status            VehiculeStatus @default(OK)
  atCompany         Boolean    @default(false)
  location          String?
  loanedTo          String?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  companyId         String     // UUID type for foreign key
  company           Company    @relation(fields: [companyId], references: [id])
  maintenanceChecklists MaintenanceChecklist[]
}

enum VehiculeStatus {
  OK
  MAINTENANCE_NEEDED
}

model MaintenanceChecklist {
  id        String     @id @default(uuid())  // UUID primary key
  date      DateTime   @default(now())
  status    String
  vehiculeId String    // UUID type for foreign key
  vehicule  Vehicule   @relation(fields: [vehiculeId], references: [id])
}
